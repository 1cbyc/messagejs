name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: messagejs_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build shared types
        run: npm run build --workspace=@messagejs/shared-types

      - name: Build core package
        run: npm run build --workspace=@messagejs/core
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/messagejs_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-jwt-secret-for-ci
          ENCRYPTION_KEY: bQGilMs8QsC3v8ZIYofamakSIiYYuMDa
          ALLOWED_ORIGINS: http://localhost:3000

      - name: Run Prisma migrations
        run: cd packages/core && npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/messagejs_test

      - name: Run tests
        run: npm run test --workspace=@messagejs/core
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/messagejs_test
          TEST_DATABASE_URL: postgresql://test:test@localhost:5432/messagejs_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-jwt-secret-for-ci
          ENCRYPTION_KEY: bQGilMs8QsC3v8ZIYofamakSIiYYuMDa
          ALLOWED_ORIGINS: http://localhost:3000
          NODE_ENV: test

      - name: Run type checking
        run: npm run typecheck --workspaces --if-present

  build:
    name: Build All Packages
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build --workspaces --if-present

